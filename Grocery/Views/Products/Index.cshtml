
@model PagedList.IPagedList<Grocery.Models.Product>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "List of products";
}
<br />
<h2>List of products:</h2>
<br />

@using (Html.BeginForm("Index", "Products", FormMethod.Get))
{
    <p>
        Find by product name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <button class="btn btn-primary btn-sm">Search</button>
    </p>
}
<br />

<table class="table table-striped table-hover ">
    <tr class="info">
        <th>
            @Html.ActionLink("Company name", "Index", new { sortOrder = ViewBag.CompanySortParm })
        </th>
        <th>
            @Html.ActionLink("Product name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Unit price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Package", "Index", new { sortOrder = ViewBag.PackSortParm })
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Package)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br/>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))